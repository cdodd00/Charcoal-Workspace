/*
	--x_curveLib.mel--
	Library for creating different shapes using curves
	
	based on Solsona's script
	
	Chance B. Dodd  10/7/11
	
*/

// crvHelpLine
// creates a linear crv from one object to another
//////////////////

global proc crvHelpLine(string $obj1, string $obj2)
{
	//create the curve
	string $crv = `curve -d 1 -p -1 0 0 -p 1 0 0 -k 0 -k 1 -n ("helperLine_" + $obj1)`;	
	
	//create clusters on each cv
	string $cluster1[] = `cluster -relative -n ("helperLine_" + $obj1 + "_clstr1") ("helperLine_" + $obj1 + ".cv[0]")`;
	string $cluster2[] = `cluster -relative -n ("helperLine_" + $obj1 + "_clstr2") ("helperLine_" + $obj1 + ".cv[1]")`;
	
	// constrain the clusters to the objects
	pointConstraint -n ("helperLineClstr1_" + $obj1 + "_pc") $obj1 ("helperLine_" + $obj1 + "_clstr1Handle");
	pointConstraint -n ("helperLineClstr2_" + $obj1 + "_pc") $obj2 ("helperLine_" + $obj1 + "_clstr2Handle");
	
	//template the crve
	setAttr ($crv + ".template") 1;
	
	//group the clusters under 1 grp
	string $helperGp = `createNode transform -n ("helperLine_" + $obj1 + "_gp")`;
	parent ("helperLine_" + $obj1 + "_clstr1Handle") ("helperLine_" + $obj1 + "_clstr2Handle") $helperGp;
	
	//hide clusters
	setAttr ($helperGp + ".v") 0;
	
}

// crvCtrl
// create differnt shapes of ctrls using nurbs crvs
/////////////////////

global proc string crvCtrl(string $type, string $name, float $scale)
{
	switch ($type)
	{
		case "locator":
			string $ctrl = `curve -d 1 -p 0 2 0 -p 0 -2 0 -p 0 0 0 -p 0 0 2 -p 0 0 -2 -p 0 0 0 -p 2 0 0 -p -2 0 0 
							-k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -n $name`;
		break;
		case "centricArrow":
			string $ctrl = `curve -d 1 -p 0 0 0 -p 32 0 -5.333333 -p 32 0 5.333333 -p 0 0 0 -p -32 0 -5.333333 
							-p -32 0 5.333333 -p 0 0 0 -p -5.333333 32 0 -p 5.333333 32 0 -p 0 0 0 -p -5.333333 -32 0 
							-p 5.333333 -32 0 -p 0 0 0 -p 0 32 5.333333 -p 0 32 -5.333333 -p 0 0 0 -p 0 -32 5.333333 
							-p 0 -32 -5.333333 -p 0 0 0 -p 32 5.333333 0 -p 32 -5.333333 0 -p 0 0 0 -p -32 5.333333 0 
							-p -32 -5.333333 0 -p 0 0 0 -p -5.333333 0 -32 -p 5.333333 0 -32 -p 0 0 0 -p -5.333333 0 32
							-p 5.333333 0 32 -p 0 0 0 -p 0 5.333333 -32 -p 0 -5.333333 -32 -p 0 0 0 -p 0 5.333333 32 
							-p 0 -5.333333 32 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 
							-k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 
							-k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -n $name`;
		break;
		case "box":
			string $ctrl = `curve -d 1 -p 0.5 0.5 0.5 -p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 
							-p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5
							-p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 
							-p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8
							-k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -n $name`;
		break;
		case "jack":
			string $ctrl = `curve -d 1 -p 0 0 0 -p 0.75 0 0 -p 1 0.25 0 -p 1.25 0 0 -p 1 -0.25 0 -p 0.75 0 0 
							-p 1 0 0.25 -p 1.25 0 0 -p 1 0 -0.25 -p 1 0.25 0 -p 1 0 0.25 -p 1 -0.25 0 -p 1 0 -0.25 
							-p 0.75 0 0 -p 0 0 0 -p -0.75 0 0 -p -1 0.25 0 -p -1.25 0 0 -p -1 -0.25 0 -p -0.75 0 0 
							-p -1 0 0.25 -p -1.25 0 0 -p -1 0 -0.25 -p -1 0.25 0 -p -1 0 0.25 -p -1 -0.25 0 -p -1 0 -0.25 
							-p -0.75 0 0 -p 0 0 0 -p 0 0.75 0 -p 0 1 -0.25 -p 0 1.25 0 -p 0 1 0.25 -p 0 0.75 0 
							-p -0.25 1 0 -p 0 1.25 0 -p 0.25 1 0 -p 0 1 0.25 -p -0.25 1 0 -p 0 1 -0.25 -p 0.25 1 0 
							-p 0 0.75 0 -p 0 0 0 -p 0 -0.75 0 -p 0 -1 -0.25 -p 0 -1.25 0 -p 0 -1 0.25 -p 0 -0.75 0 
							-p -0.25 -1 0 -p 0 -1.25 0 -p 0.25 -1 0 -p 0 -1 -0.25 -p -0.25 -1 0 -p 0 -1 0.25 
							-p 0.25 -1 0 -p 0 -0.75 0 -p 0 0 0 -p 0 0 -0.75 -p 0 0.25 -1 -p 0 0 -1.25 -p 0 -0.25 -1
							-p 0 0 -0.75 -p -0.25 0 -1 -p 0 0 -1.25 -p 0.25 0 -1 -p 0 0.25 -1 -p -0.25 0 -1 
							-p 0 -0.25 -1 -p 0.25 0 -1 -p 0 0 -0.75 -p 0 0 0 -p 0 0 0.75 -p 0 0.25 1 -p 0 0 1.25
							-p 0 -0.25 1 -p 0 0 0.75 -p -0.25 0 1 -p 0 0 1.25 -p 0.25 0 1 -p 0 0.25 1 -p -0.25 0 1
							-p 0 -0.25 1 -p 0.25 0 1 -p 0 0 0.75 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 
							-k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 
							-k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 
							-k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 
							-k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 
							-k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 
							-k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -n $name`;
		break;
		case "sphere":
			string $ctrl = `curve -d 1 -p 0 0 1 -p 0 0.5 0.866025 -p 0 0.866025 0.5 -p 0 1 0 -p 0 0.866025 -0.5 
							-p 0 0.5 -0.866025 -p 0 0 -1 -p 0 -0.5 -0.866025 -p 0 -0.866025 -0.5 -p 0 -1 0 
							-p 0 -0.866025 0.5 -p 0 -0.5 0.866025 -p 0 0 1 -p 0.707107 0 0.707107 -p 1 0 0 
							-p 0.707107 0 -0.707107 -p 0 0 -1 -p -0.707107 0 -0.707107 -p -1 0 0 -p -0.866025 0.5 0
							-p -0.5 0.866025 0 -p 0 1 0 -p 0.5 0.866025 0 -p 0.866025 0.5 0 -p 1 0 0 
							-p 0.866025 -0.5 0 -p 0.5 -0.866025 0 -p 0 -1 0 -p -0.5 -0.866025 0 -p -0.866025 -0.5 0 
							-p -1 0 0 -p -0.707107 0 0.707107 -p 0 0 1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 
							-k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 
							-k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n $name`;
		break;
	}
	
	//set the scale
	setAttr ($ctrl + ".scale") $scale $scale $scale;
	//freeze scales
	makeIdentity -apply true -scale true $ctrl;

	return $ctrl;
	
}

